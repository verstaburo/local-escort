// Mixins.

m-nl()
    margin 0
    padding 0
    text-indent 0
    list-style none
    list-style-position outside

m-cf()
    &:before, &:after
        display table
        content ""

    &:after
        clear both

    .lt-ie8 &
        zoom 1


m-blocks-justify()
    text-align justify
    text-justify newspaper

/*
Быстренько подрубаем аппаратное ускорение для анимирующихся элементов.
Пример использования:
div {
  performance
}
*/
performance(backfase = true, perspective = 1000)
    if backface
            backface-visibility hidden
    perspective perspective

/*
Миксин для обрезания длинной строки троеточием.
Пример использования:
p {
  ellipsis(100%)
}
*/
ellipsis(truncation-boundary) {
    max-width truncation-boundary
    white-space nowrap
    overflow hidden
    text-overflow ellipsis
}

/*
Миксин для того, чтоб скрыть элемент, но при этом он все равно рендерился
и был доступен в DOM.
Пример использования:
div {
    visual-hide
}
*/
visual-hide()
    margin 0
    padding 0
    width 0
    height 0
    overflow hidden
    clip rect(0 0 0 0)
    clip rect(0, 0, 0, 0)

// Standart project transition
transition(value1, value2 = false)
    if value2
        transition value1 .25s ease-in-out, value2 .25s ease-in-out

    else
        transition value1 .25s ease-in-out

/*
Миксин для изображений.
Нужен, чтобы картинка заполняла другой блок подобно background-$size: cover
Пример использования:
div {
  fill-img
}
*/
fill-img()
    position absolute
    top 0
    left 0
    right 0
    bottom 0
    margin auto
    object-fit cover
    font-family 'object-fit: cover'
    width 0
    min-width 100%
    min-height 100%

/*
Миксин для базовых параметров псевдоэлементов.
Пример использования:
div::after {
  @include pseudo;
  top: 10px;
  left: 10px;
  width: 150px;
}
*/
pseudo(display = block, pos = absolute, content = "")
  content: content
  display: display
  position: pos
/*
Миксин для треугольников, сделанных через :before и :after
Пример:
div::after {
  @include triangle(black, top, 10px);
}
*/
triangle($color, $direction, $size = 6px, position = absolute, $round = false)

  pseudo()

  width: 0
  height: 0

  if $round
    border-radius: 3px

  if $direction == down
    border-left: $size solid transparent
    border-right: $size solid transparent
    border-top: $size solid $color
    margin-top: (0 - round($size / 2.5))

  else if $direction == up
    border-left: $size solid transparent
    border-right: $size solid transparent
    border-bottom: $size solid $color
    margin-bottom: (0 - round($size / 2.5))

  else if $direction == right
    border-top: $size solid transparent
    border-bottom: $size solid transparent
    border-left: $size solid $color
    margin-right: -1*$size

  else if $direction == left
    border-top: $size solid transparent
    border-bottom: $size solid transparent
    border-right: $size solid $color
    margin-left: -1*$size
